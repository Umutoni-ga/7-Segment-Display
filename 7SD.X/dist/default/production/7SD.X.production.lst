

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 24 14:02:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.32
    15                           ; Generated 02/02/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171  0787                     __pidataBANK0:
   172                           
   173                           ;initializer for main@F879
   174  0787  34BF               	retlw	191
   175  0788  3486               	retlw	134
   176  0789  34DB               	retlw	219
   177  078A  34CF               	retlw	207
   178  078B  34E6               	retlw	230
   179  078C  34ED               	retlw	237
   180  078D  34FD               	retlw	253
   181  078E  3487               	retlw	135
   182  078F  34FF               	retlw	255
   183  0790  34EF               	retlw	239
   184  0008                     _PORTD	set	8
   185  0088                     _TRISD	set	136
   186                           
   187                           	psect	cinit
   188  07EE                     start_initialization:	
   189                           ; #config settings
   190                           
   191  07EE                     __initialization:
   192                           
   193                           ; Initialize objects allocated to BANK0
   194  07EE  1383               	bcf	3,7	;select IRP bank0
   195  07EF  3036               	movlw	low (__pdataBANK0+10)
   196  07F0  00FD               	movwf	btemp+-1
   197  07F1  3007               	movlw	high __pidataBANK0
   198  07F2  00FE               	movwf	btemp
   199  07F3  3087               	movlw	low __pidataBANK0
   200  07F4  00FF               	movwf	btemp+1
   201  07F5  302C               	movlw	low __pdataBANK0
   202  07F6  0084               	movwf	4
   203  07F7  120A  118A  2795  120A  118A  	fcall	init_ram0
   204  07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07FC                     __end_of__initialization:
   208  07FC  0183               	clrf	3
   209  07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	dataBANK0
   212  002C                     __pdataBANK0:
   213  002C                     main@F879:
   214  002C                     	ds	10
   215                           
   216                           	psect	inittext
   217  0791                     init_fetch0:	
   218                           ;	Called with low address in FSR and high address in W
   219                           
   220  0791  087E               	movf	btemp,w
   221  0792  008A               	movwf	10
   222  0793  087F               	movf	btemp+1,w
   223  0794  0082               	movwf	2
   224  0795                     init_ram0:	
   225                           ;Called with:
   226                           ;	high address of idata address in btemp 
   227                           ;	low address of idata address in btemp+1 
   228                           ;	low address of data in FSR
   229                           ;	high address + 1 of data in btemp-1
   230                           
   231  0795  120A  118A  2791  120A  118A  	fcall	init_fetch0
   232  079A  0080               	movwf	0
   233  079B  0A84               	incf	4,f
   234  079C  0804               	movf	4,w
   235  079D  067D               	xorwf	btemp+-1,w
   236  079E  1903               	btfsc	3,2
   237  079F  3400               	retlw	0
   238  07A0  0AFF               	incf	btemp+1,f
   239  07A1  1903               	btfsc	3,2
   240  07A2  0AFE               	incf	btemp,f
   241  07A3  2F95               	goto	init_ram0
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:
   245  0070                     ?_main:
   246  0070                     ??_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251  0070                     	ds	4
   252                           
   253                           	psect	cstackBANK0
   254  0020                     __pcstackBANK0:
   255  0020                     main@seg_code:
   256                           
   257                           ; 10 bytes @ 0x0
   258  0020                     	ds	10
   259  002A                     main@i:
   260                           
   261                           ; 2 bytes @ 0xA
   262  002A                     	ds	2
   263                           
   264                           	psect	maintext
   265  07A4                     __pmaintext:	
   266 ;;
   267 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   268 ;;
   269 ;; *************** function _main *****************
   270 ;; Defined at:
   271 ;;		line 27 in file "newmain.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;  seg_code       10    0[BANK0 ] unsigned char [10]
   276 ;;  i               2   10[BANK0 ] int 
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         0      12       0       0       0
   288 ;;      Temps:          4       0       0       0       0
   289 ;;      Totals:         4      12       0       0       0
   290 ;;Total ram usage:       16 bytes
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           
   299                           ;psect for function _main
   300  07A4                     _main:
   301  07A4                     l628:	
   302                           ;incstack = 0
   303                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   304                           
   305                           
   306                           ;newmain.c: 28:   char seg_code[]={0xbf,0x86,0xdb,0xcf,0xe6,0xed,0xfd,0x87,0xff,0xef};
   307  07A4  3020               	movlw	main@seg_code& (0+255)
   308  07A5  0084               	movwf	4
   309  07A6  302C               	movlw	low main@F879
   310  07A7  00F0               	movwf	??_main
   311  07A8  0804               	movf	4,w
   312  07A9  00F1               	movwf	??_main+1
   313  07AA  300A               	movlw	10
   314  07AB  00F2               	movwf	??_main+2
   315  07AC                     u30:
   316  07AC  0870               	movf	??_main,w
   317  07AD  0084               	movwf	4
   318  07AE  1383               	bcf	3,7	;select IRP bank0
   319  07AF  0800               	movf	0,w
   320  07B0  00F3               	movwf	??_main+3
   321  07B1  0AF0               	incf	??_main,f
   322  07B2  0871               	movf	??_main+1,w
   323  07B3  0084               	movwf	4
   324  07B4  0873               	movf	??_main+3,w
   325  07B5  0080               	movwf	0
   326  07B6  0AF1               	incf	??_main+1,f
   327  07B7  0BF2               	decfsz	??_main+2,f
   328  07B8  2FAC               	goto	u30
   329  07B9                     l630:
   330                           
   331                           ;newmain.c: 29:     int i;;newmain.c: 32:     TRISD = 0x00;
   332  07B9  1683               	bsf	3,5	;RP0=1, select bank1
   333  07BA  1303               	bcf	3,6	;RP1=0, select bank1
   334  07BB  0188               	clrf	8	;volatile
   335  07BC                     l632:
   336                           
   337                           ;newmain.c: 35:     {;newmain.c: 36:         for (i = 0; i <= 9; i++)
   338  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   339  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   340  07BE  01AA               	clrf	main@i
   341  07BF  01AB               	clrf	main@i+1
   342  07C0                     l638:
   343                           
   344                           ;newmain.c: 37:         {;newmain.c: 38:             PORTD = seg_code[i];
   345  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   346  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   347  07C2  082A               	movf	main@i,w
   348  07C3  3E20               	addlw	(low (main@seg_code| 0))& (0+255)
   349  07C4  0084               	movwf	4
   350  07C5  1383               	bcf	3,7	;select IRP bank0
   351  07C6  0800               	movf	0,w
   352  07C7  0088               	movwf	8	;volatile
   353  07C8                     l640:
   354                           
   355                           ;newmain.c: 39:             _delay((unsigned long)((1000)*(5000000/4000.0)));
   356  07C8  3007               	movlw	7
   357  07C9  00F2               	movwf	??_main+2
   358  07CA  3058               	movlw	88
   359  07CB  00F1               	movwf	??_main+1
   360  07CC  3059               	movlw	89
   361  07CD  00F0               	movwf	??_main
   362  07CE                     u57:
   363  07CE  0BF0               	decfsz	??_main,f
   364  07CF  2FCE               	goto	u57
   365  07D0  0BF1               	decfsz	??_main+1,f
   366  07D1  2FCE               	goto	u57
   367  07D2  0BF2               	decfsz	??_main+2,f
   368  07D3  2FCE               	goto	u57
   369  07D4  2FD5               	nop2
   370  07D5                     l642:
   371                           
   372                           ;newmain.c: 40:         }
   373  07D5  3001               	movlw	1
   374  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   375  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   376  07D8  07AA               	addwf	main@i,f
   377  07D9  1803               	skipnc
   378  07DA  0AAB               	incf	main@i+1,f
   379  07DB  3000               	movlw	0
   380  07DC  07AB               	addwf	main@i+1,f
   381  07DD                     l644:
   382  07DD  082B               	movf	main@i+1,w
   383  07DE  3A80               	xorlw	128
   384  07DF  00FF               	movwf	btemp+1
   385  07E0  3080               	movlw	128
   386  07E1  027F               	subwf	btemp+1,w
   387  07E2  1D03               	skipz
   388  07E3  2FE6               	goto	u45
   389  07E4  300A               	movlw	10
   390  07E5  022A               	subwf	main@i,w
   391  07E6                     u45:
   392  07E6  1C03               	skipc
   393  07E7  2FE9               	goto	u41
   394  07E8  2FEA               	goto	u40
   395  07E9                     u41:
   396  07E9  2FC0               	goto	l638
   397  07EA                     u40:
   398  07EA  2FBC               	goto	l632
   399  07EB  120A  118A  2800   	ljmp	start
   400  07EE                     __end_of_main:
   401  007E                     btemp	set	126	;btemp
   402  007E                     wtemp0	set	126
   403                           
   404                           	psect	config
   405                           
   406                           ;Config register CONFIG @ 0x2007
   407                           ;	Oscillator Selection bits
   408                           ;	FOSC = EXTRC, RC oscillator
   409                           ;	Watchdog Timer Enable bit
   410                           ;	WDTE = OFF, WDT disabled
   411                           ;	Power-up Timer Enable bit
   412                           ;	PWRTE = OFF, PWRT disabled
   413                           ;	Brown-out Reset Enable bit
   414                           ;	BOREN = ON, BOR enabled
   415                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   416                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   417                           ;	Data EEPROM Memory Code Protection bit
   418                           ;	CPD = OFF, Data EEPROM code protection off
   419                           ;	Flash Program Memory Write Enable bits
   420                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   421                           ;	In-Circuit Debugger Mode bit
   422                           ;	DEBUG = 0x1, unprogrammed default
   423                           ;	Flash Program Memory Code Protection bit
   424                           ;	CP = OFF, Code protection off
   425  2007                     	org	8199
   426  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0      92
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 24 14:02:28 2021

                      pc 0002                       u30 07AC                       u40 07EA  
                     u41 07E9                       u45 07E6                       u57 07CE  
                     fsr 0004                      l630 07B9                      l640 07C8  
                    l632 07BC                      l642 07D5                      l644 07DD  
                    l628 07A4                      l638 07C0                      fsr0 0004  
                    indf 0000                     _main 07A4                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088             main@seg_code 0020                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0787  
             __pmaintext 07A4     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0791              __pdataBANK0 002C                ___latbits 0002  
          __pcstackBANK0 0020            __size_of_main 004A                 main@F879 002C  
               init_ram0 0795  
